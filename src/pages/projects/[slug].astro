---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Project from "../../layouts/Project.astro";
import Link from "../../components/Link.astro";

export const getStaticPaths = (async () => {
  const projectEntries = await getCollection('projects');
  return projectEntries.map(entry => ({
    params: { slug: entry.slug }, props: {entry}
  }))
}) satisfies GetStaticPaths;

interface props {
  entry: {
    slug: string;
    data: {
      title: string;
      description: string;
      repoUrl: string;
    }
  };
  render: () => Promise<{Content: any; headings: any[]}>
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

let urlData = entry.data.repoUrl.split("/");
const repo = urlData.pop();
const username = urlData.pop();

---
<Project title={entry.data.title} headings={headings}>
  <div class="prose">
    <div class="m-4">
      <h1>{entry.data.title}</h1>
      <Link href={entry.data.repoUrl}>
        <img class="portfolio-pin" src=`https://github-readme-stats.vercel.app/api/pin/?username=${username}&repo=${repo}&theme=tokyonight`>
      </Link>
    </div>
    <Content />
  </div>
  
  <style is:global>
    .prose h1 { @apply text-2xl font-bold text-highlight mb-4 mt-8; }
    .prose h2 { @apply text-xl font-semibold text-secondary mb-4 mt-8; }
    .prose h3 { @apply text-lg font-semibold text-secondary mb-3 mt-6; }
    .prose p { @apply mb-4 text-primary; }
    .prose ul { @apply list-disc list-inside mb-4; }
    .prose ol { @apply list-decimal list-inside mb-4; }
    .prose li { @apply mb-2; }
  </style>
</Project>